name: Module

on:
  workflow_dispatch:
    inputs:
      module:
        type: choice
        description: Module
        required: true
        options: [tools]

      bump:
        type: choice
        description: Bump
        required: true
        options:
          - patch
          - minor

      first:
        type: boolean
        description: First Release
        default: false

      gpgsign:
        type: boolean
        description: GPG Sign
        default: false

jobs:
  Generate:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup

      - name: Release
        if: ${{ github.event.inputs.gpgsign == 'false' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          OPTIONS="$BUMP_ARG $MODULE_ARG $FIRST_ARG" task release-module
          git push origin main --tags
        env:
          BUMP_ARG: ${{ fromJSON('{"patch":"-i patch", "minor":"-i minor"}')[github.event.inputs.bump] }}
          MODULE_ARG: -m ${{ github.event.inputs.module }}
          FIRST_ARG: ${{ github.event.inputs.first == 'true' && '-f' || '' }}

      - name: (GPG) Setup
        if: ${{ github.event.inputs.gpgsign == 'true' }}
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: (GPG) Release
        if: ${{ github.event.inputs.gpgsign == 'true' }}
        run: |
          OPTIONS="$BUMP_ARG $MODULE_ARG $FIRST_ARG" task release-module
          git push origin main --tags
        env:
          BUMP_ARG: ${{ fromJSON('{"patch":"-i patch", "minor":"-i minor"}')[github.event.inputs.bump] }}
          MODULE_ARG: -m ${{ github.event.inputs.module }}
          FIRST_ARG: ${{ github.event.inputs.first == 'true' && '-f' || '' }}
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
